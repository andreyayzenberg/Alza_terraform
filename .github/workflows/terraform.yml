name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Select Action to Perform'
        required: true
        options:
          - create
          - destroy
        default: 'create'

permissions:
  contents: write
  pull-requests: write

env:
  TF_LOG: INFO
  TF_HTTP_USERNAME: ${{ github.actor }}
  TF_HTTP_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.1"

      - name: Configure Backend
        run: |
          REPO_PATH="${{ github.repository }}"
          sed -i "s|OWNER/REPO|$REPO_PATH|g" backend.tf

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}

      - name: Terraform Plan Create
        id: plan
        if: github.event_name == 'pull_request' || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'create')
        run: terraform plan -no-color
        env:
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_token: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_owner: ${{ github.repository_owner }}
        continue-on-error: true

      - name: Terraform Plan Destroy
        id: plan-destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: terraform plan -destroy -no-color
        env:
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_token: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_owner: ${{ github.repository_owner }}
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure' || steps.plan-destroy.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: |
          (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
          (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'create')
        run: terraform apply -auto-approve
        env:
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_token: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_owner: ${{ github.repository_owner }}

      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
        env:
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_token: ${{ secrets.TF_GITHUB_TOKEN }}
          TF_VAR_github_owner: ${{ github.repository_owner }} 